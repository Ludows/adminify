<?php

namespace {{namespace}};

use {{rootNamespace}}Models\{{model}};
use App\Repositories\{{model}}Repository;
use Ludows\Adminify\Http\Controllers\Controller;
use App\Http\Requests\Create{{model}}Request;
use App\Http\Requests\Update{{model}}Request;


use Illuminate\Http\Request;

class {{class}} extends Controller
{
    private ${{model}}Repository;

    public function __construct(PageRepository $pageRepository)
    {
        $this->middleware(function ($request, $next) {
            $u = user();
            $this->user = $u;
    
            return $next($request);
        });
        $this->{{model}}Repository = ${{model}}Repository;
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        if(!$this->user->tokenCan('api:read')) {
            abort(403);
        };

        return {{model}}::all();
    }
    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Create{{model}}Request $request)
    {
        //
        if(!$this->user->tokenCan('api:create')) {
            abort(403);
        };
        $m = new {{resource}}();

        $model = $this->{{model}}Repository->addModel($m)->create($request->all());
        
        return response()->json([
            'entry' => $model,
            'message' => __('admin.success_entry_created'),
            'status' => 'OK'
        ]);
    }
    /**
     * Display the specified resource.
     *
     * @param  \App\Todo  $todo
     * @return \Illuminate\Http\Response
     */
    public function show({{model}} ${{resource}})
    {
        if(!$this->user->tokenCan('api:read')) {
            abort(403);
        };

        return ${{resource}};
    }
    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Todo  $todo
     * @return \Illuminate\Http\Response
     */
    public function update(Update{{model}}Request $request, {{model}} ${{resource}})
    {
        //
        if(!$this->user->tokenCan('api:update')) {
            abort(403);
        };

        $model = $this->{{model}}Repository->addModel(${{resource}})->update($request->all(), ${{resource}});
        
        return response()->json([
            'entry' => $model,
            'message' => __('admin.success_entry_updated'),
            'status' => 'OK'
        ]);

    }
    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Todo  $todo
     * @return \Illuminate\Http\Response
     */
    public function destroy({{model}} ${{resource}})
    {
        //
        if(!$this->user->tokenCan('api:delete')) {
            abort(403);
        };
        
        $m = ${{resource}};

        $this->{{model}}Repository->addModel($m)->delete($m);
        
        return response()->json([
            'entry' => $m,
            'message' => __('admin.success_entry_deleted'),
            'status' => 'OK'
        ]);
    }
}